---
openshift_cluster_content:
- object: Projects
  content:
  - name: {{ ar_osc_amqinterconnect_name }} Project
    template: "{{ _ar_osc_amqinterconnect_config_dest_templates }}/project-template.yml"
    action: create
    params_from_vars:
      NAMESPACE: "{{ ar_osc_amqinterconnect_ns }}"
      NAMESPACE_DISPLAY_NAME: "{{ ar_osc_amqinterconnect_ns | upper }}"
    tags:
    - projects
    - aspera
    - amqbroker
    - amqic

{% if ar_osc_amqinterconnect_instance.serviceaccounts is defined %}
{% set serviceaccounts = ar_osc_amqinterconnect_instance.serviceaccounts | merge_list_of_dicts({'namespace': ar_osc_amqinterconnect_ns}) %}
- object: Service Accounts for {{ deployment_phase | upper }}
  content:
{% for serviceaccount in ar_osc_amqinterconnect_instance.serviceaccounts %}
  - name: {{ serviceaccount.name }}-serviceaccount
    namespace: "{{ ar_osc_amqinterconnect_ns }}"
    template: "{{ _ar_osc_amqinterconnect_config_dest_templates }}/serviceaccount-template.yml"
    action: apply
    params_from_vars:
      SA_NAME: {{ serviceaccount.name }}
      SA_NAMESPACE: {{ ar_osc_amqinterconnect_ns }}
    tags:
    - projects
    - serviceaccounts
    - aspera
    - amqbroker
    - amqic
{% endfor %}
    post_steps:
      - role: ar_os_scc_binding
        vars:
          tmp_dep_dir: {{ playbook_dir}}/../roles/
          ar_os_scc_binding_items: {{ serviceaccounts | to_json }}
{% endif %}

- object: Deployments {{ deployment_phase | upper }}
  content:
# Secret for {{ ar_osc_amqinterconnect_name }} certificates
  - name: {{ ar_osc_amqinterconnect_name }}-certs
    namespace: "{{ ar_osc_amqinterconnect_ns }}"
    template: "{{ _ar_osc_amqinterconnect_config_dest_templates }}/amq-interconnect-tls-secret.yml"
    action: apply
    tags:
    - amqic

# Config Map for {{ ar_osc_amqinterconnect_name }}
  - name: {{ ar_osc_amqinterconnect_name }}-config-map
    namespace: "{{ ar_osc_amqinterconnect_ns }}"
    template: "{{ _ar_osc_amqinterconnect_config_dest_templates }}/amq-interconnect-qdrouter-cm.yml"
    action: apply
    tags:
    - amqic

# SASL Config Map for {{ ar_osc_amqinterconnect_name }}
  - name: {{ ar_osc_amqinterconnect_name }}-sasl-config-map
    namespace: "{{ ar_osc_amqinterconnect_ns }}"
    template: "{{ _ar_osc_amqinterconnect_config_dest_templates }}/sasl-qdrouterd-cm.yml"
    action: apply
    tags:
    - amqic

# Secret for {{ ar_osc_amqinterconnect_name }} user files
  - name: {{ ar_osc_amqinterconnect_name }}-users
    namespace: "{{ ar_osc_amqinterconnect_ns }}"
    template: "{{ _ar_osc_amqinterconnect_config_dest_templates }}/users-secret.yml"
    action: apply
    tags:
    - amqic

# AMQ Interconnect instance for {{ ar_osc_amqinterconnect_name }}
  - name: "{{ ar_osc_amqinterconnect_instance | ic_application_name }}"
    namespace: "{{ ar_osc_amqinterconnect_ns }}"
    template: "{{ _ar_osc_amqinterconnect_config_dest_templates }}/amq-ic-k8s-template.yml"
    action: apply
    params_from_vars:
      APPLICATION_NAME: "{{ ar_osc_amqinterconnect_instance | ic_application_name }}"
      QDROUTERD_CONF_NAME: {{ ar_osc_amqinterconnect_name }}-config-map
      QDROUTERD_CONF_HASH: "{{ lookup('file', _ar_osc_amqinterconnect_config_dest_templates + '/qpid-dispatch-router.conf') | hash('md5') }}"
      SASL_CONF_NAME: {{ ar_osc_amqinterconnect_name }}-sasl-config-map
      USERS_SECRET_FILES_NAME: {{ ar_osc_amqinterconnect_name }}-users
      CERT_SECRET_NAME: {{ ar_osc_amqinterconnect_name }}-certs
{% if amqic_image is defined or 'amqic_image' in ar_osc_amqinterconnect_instance %}
      IMAGE_NAME: {{ ar_osc_amqinterconnect_instance.amqic_image | default(amqic_image) }}
{% endif %}
{% if amqic_image_ns is defined or 'amqic_image_ns' in ar_osc_amqinterconnect_instance %}
      IMAGE_STREAM_NAMESPACE: {{ ar_osc_amqinterconnect_instance.amqic_image_ns | default(amqic_image_ns) }}
{% endif %}
      APP_GROUP: "{{ ar_osc_amqinterconnect_name }}"
    tags:
    - amqic

